!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module find_lowest__user__routines 
    interface find_lowest_user_interface 
        subroutine callback(m) ! in :f_gpu:gpusearch.f90:gpusearch:find_lowest:unknown_interface
            intent(callback) callback
            integer(kind=8) :: m
        end subroutine callback
     end interface find_lowest_user_interface
end python module find_lowest__user__routines
python module isinggpu ! in 
    interface  ! in :f_gpu
        module gpusearch ! in :f_gpu:gpusearch.f90
            subroutine find_lowest(jh,no_bits,sweep_size,energies_out,states_out,how_many) ! in :f_gpu:gpusearch.f90:gpusearch
                use thrust
                use cudafor
                use global, only: wp,ik,d
                use cuda_search, only: search
                use find_lowest__user__routines
                real(kind=8) dimension(no_bits,no_bits),intent(in) :: jh
                integer(kind=8), optional,intent(in),check(shape(jh,0)==no_bits),depend(jh) :: no_bits=shape(jh,0)
                integer(kind=8) intent(in) :: sweep_size
                real(kind=8) dimension(how_many),intent(out),depend(how_many) :: energies_out
                integer(kind=8) dimension(how_many),intent(out),depend(how_many) :: states_out
                integer(kind=8) intent(in) :: how_many
                intent(callback) callback
                external callback
              end subroutine find_lowest
            subroutine find_lowest_energies_only(jh,no_bits,sweep_size,energies_out,how_many) ! in :f_gpu:gpusearch.f90:gpusearch
                use thrust
                use cudafor
                use global, only: wp,ik,d
                use cuda_search, only: search
                use find_lowest__user__routines
                real(kind=8) dimension(no_bits,no_bits),intent(in) :: jh
                integer(kind=8), optional,intent(in),check(shape(jh,0)==no_bits),depend(jh) :: no_bits=shape(jh,0)
                integer(kind=8) intent(in) :: sweep_size
                real(kind=8) dimension(how_many),intent(out),depend(how_many) :: energies_out
                integer(kind=8) intent(in) :: how_many
                intent(callback) callback
                external callback
              end subroutine find_lowest_energies_only
            subroutine get_device_properties(mem_in_bytes) ! in :f_gpu:gpusearch.f90:gpusearch
                use cudafor
                use global, only: ik
                integer(kind=8) intent(out) :: mem_in_bytes
            end subroutine get_device_properties
        end module gpusearch
    end interface 
end python module isinggpu

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
